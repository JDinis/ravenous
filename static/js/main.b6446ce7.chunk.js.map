{"version":3,"sources":["components/business/business.js","components/businesslist/businesslist.js","components/searchbar/searchbar.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","business_Business","sortByOptions","Best Match","Highest Rated","Most Reviewed","Shortest Distance","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","distance","handleSortByChange","bind","assertThisInitialized","handleTermChange","handleLocationChange","handleDistanceChange","handleSearch","_this2","keys","sortByOption","sortByOptionValue","getSortByClass","onClick","key","setState","event","target","value","searchYelp","preventDefault","renderSortByOptions","onChange","placeholder","App","sortby","console","log","searchbar_SearchBar","businesslist_BusinessList","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6446ce7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './business.css';\r\n\r\nexport default class Business extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Business from '../business/business';\r\nimport './businesslist.css';\r\n\r\nexport default class BusinessList extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map(business => { \r\n                            return <Business business={business}/>\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './searchbar.css';\r\n\r\nconst sortByOptions = {\r\n    \"Best Match\":\"best_match\",\r\n    \"Highest Rated\":\"rating\",\r\n    \"Most Reviewed\":\"review_count\",\r\n    \"Shortest Distance\":\"distance\"\r\n};\r\n\r\nexport default class SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term:'',\r\n            location:'',\r\n            sortBy:'best_match',\r\n            distance:''\r\n        };\r\n\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleDistanceChange = this.handleDistanceChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    renderSortByOptions(){\r\n        return Object.keys(sortByOptions).map(sortByOption =>{\r\n           let sortByOptionValue = sortByOptions[sortByOption];\r\n           return <li className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this,sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n        });\r\n    }\r\n    \r\n    getSortByClass(sortByOption){\r\n        return (this.state.sortBy === sortByOption ? 'active' : '');\r\n    }\r\n\r\n    handleSortByChange(sortByOption){\r\n        this.setState({sortBy:sortByOption});\r\n    }\r\n\r\n    handleTermChange(event){\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleDistanceChange(event){\r\n        this.setState({distance: event.target.value});\r\n    }\r\n\r\n    handleSearch(event){\r\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy,this.state.distance);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                    {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n                    <input onChange={this.handleDistanceChange} placeholder=\"Distance\" />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BusinessList from '../../components/businesslist/businesslist';\r\nimport SearchBar from '../../components/searchbar/searchbar';\r\nimport './App.css';\r\n\r\nconst business = {\r\n  imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\r\n  name: 'MarginOtto Pizzeria',\r\n  address: '1010 Paddington Way',\r\n  city: 'Flavortown',\r\n  state: 'NY',\r\n  zipCode: '10101',\r\n  category: 'Italian',\r\n  rating: 4.5,\r\n  reviewCount: 90\r\n};\r\n\r\nconst businesses = [\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business\r\n];\r\n\r\nexport default class App extends Component {\r\n  searchYelp(term,location,sortby,distance){\r\n    console.log(\"Searching Yelp with \"+term+\", \"+location+\", \"+sortby+\", \"+distance)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Ravenous</h1>\r\n        <SearchBar searchYelp={this.searchYelp}/>\r\n        <BusinessList businesses={businesses}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}